name: CI

on: [push, pull_request]

jobs:
  build-node:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [12.x, 13.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: npm install, build, and test
      run: |
        npm ci
        npm run build --if-present
      env:
        CI: true

  build-docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile
    
  publish-docker:
    runs-on: ubuntu-latest
    needs:
     - build-docker
     - build-node

    steps:
    - uses: actions/checkout@v1
    - name: Publish the Docker image
      if: github.ref == 'refs/heads/master'
      run: |
        docker build . --file Dockerfile --tag ${{ secrets.registry_host }}/${{ github.repository }}:latest
        docker login ${{ secrets.registry_host }} --username ${{ secrets.registry_user }} --password ${{ secrets.registry_password }}
        docker push ${{ secrets.registry_host }}/${{ github.repository }}:latest
